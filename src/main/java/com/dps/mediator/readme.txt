中介者模式(Mediator)的定义
    用一个中介对象来封装一系列的对象交互。中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。


中介者模式(Mediator)的适用性
    1.一组对象以定义良好但是复杂的方式进行通信，产生的相互依赖关系结构混乱且难以理解。

    2.一个对象引用其他很多对象并且直接与这些对象通信,导致难以复用该对象。

    3.想定制一个分布在多个类中的行为，但又不想生成太多的子类。


中介者模式(Mediator)的参与者
    1.Mediator

    中介者定义一个接口用于与各同事（Colleague）对象通信。

    2.ConcreteMediator

    具体中介者通过协调各同事对象实现协作行为，了解并维护它的各个同事。

    3.Colleague:

    抽象同事类。

    ４.Colleagueclass

    具体同事类。每个具体同事类都只需要知道自己的行为即可，但是他们都需要认识中介者


总结：
中介者就是一个处于众多对象中间，并恰当地处理众多对象之间相互之间的联系的角色。以上代码中只有两个参与者类，但是这些我们都可以根据中介者模式的宗旨进行适当地扩展，即增加参与者类，然后中介者就得担负更加重的任务了，我们看到上面具体中介者类Mediator中的方法比较多而且有点乱。 所以，在解耦参与者类之间的联系的同时，中介者自身也不免任务过重，因为几乎所有的业务逻辑都交代到中介者身上了，可谓是“万众期待”的一个角色了。这就是中介者模式的不足之处了。此外，上面这个代码例子的参与者的属性和方法都是一样的，我们可以抽取一个抽象类出来，减少代码，但是有时候我们根本抽取不了多个“参与者”之间的共性来形成一个抽象类，这也大大增加了中介者模式的使用难度。